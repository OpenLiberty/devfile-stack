/*
 * Copyright (c) 2021 IBM Corporation and others
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
group = 'dev.odo.java-openliberty.samples'
description = 'OpenLiberty Application Stack primer built with Gradle'

repositories {
    mavenCentral()
}

apply plugin: 'war'
apply plugin: 'liberty'

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

dependencies {
    providedCompile 'org.eclipse.microprofile:microprofile:4.0'   
    providedCompile 'jakarta.platform:jakarta.jakartaee-api:8.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.microshed:microshed-testing-liberty:0.9'
    testImplementation 'io.rest-assured:rest-assured:4.4.0'
    testImplementation 'org.slf4j:slf4j-log4j12:1.7.31'
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.openliberty.tools:liberty-gradle-plugin:3.2'
    }
}

liberty {
    server {
        mergeServerEnv = true
        stripVersion = true
    }
}

test {
    useJUnitPlatform()
    reports.html.destination = file("$buildDir/reports/unit")
    reports.junitXml.destination = file("$buildDir/test-results/unit")
    testLogging {
            displayGranularity 1
            showStandardStreams = true
            showStackTraces = true
            exceptionFormat = 'full'
            events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

test.dependsOn 'libertyStart'
clean.dependsOn 'libertyStop'
