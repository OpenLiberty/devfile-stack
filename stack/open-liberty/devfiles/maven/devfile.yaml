# Copyright (c) 2021,2022 IBM Corporation and others
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
schemaVersion: 2.2.0
metadata:
  name: java-openliberty
  version: 0.9.0
  displayName: 'Open Liberty Maven'
  description: Java application Maven-built stack using the Open Liberty runtime
  icon: https://raw.githubusercontent.com/OpenLiberty/logos/7fbb132949b9b2589e18c8d5665c1b107028a21d/logomark/svg/OL_logomark.svg
  tags: ['Java', 'Maven']
  architectures: ['amd64', 'ppc64le', 's390x']
  language: 'java'
  projectType: 'openliberty'
  alpha.build-dockerfile: 'https://github.com/OpenLiberty/devfile-stack/releases/download/open-liberty-maven-0.9.0/Dockerfile'
  alpha.deployment-manifest: 'https://github.com/OpenLiberty/devfile-stack/releases/download/open-liberty-maven-0.9.0/app-deploy.yaml'
starterProjects:
  - name: rest
    git:
      remotes:
        origin: 'https://github.com/OpenLiberty/devfile-stack-starters.git'
variables:
  # Liberty runtime version. Minimum recommended: 21.0.0.9
  liberty-version: '22.0.0.1'
  liberty-plugin-version: '3.5.1'
  mvn-cmd: 'mvn'
  CONTAINER_IMAGE: 'demo-image:0'
  COMPONENT_NAME: 'demo-app'
components:
  - name: dev
    container:
      # In the original upstream of this devfile, the image used is openliberty/devfile-stack:<x.y.z>, which is built from the repository: https://github.com/OpenLiberty/devfile-stack
      image: icr.io/appcafe/open-liberty-devfile-stack:{{liberty-version}}
      memoryLimit: 768Mi
      mountSources: true
      endpoints:
        - exposure: public
          path: /
          name: ep1
          targetPort: 9080
          protocol: http
#
#deploy components
#
  - name: outerloop-build-app
    image:
        imageName: "{{CONTAINER_IMAGE}}"
        dockerfile:
          uri: ./Dockerfile
          buildContext: ${PROJECTS_ROOT}
  - name: outerloop-build-stack
    image:
       imageName: "{{CONTAINER_IMAGE}}"
       dockerfile:
        # eventually should be remote stack based Dockerfile: odo github issue #5450  
        # ie: 'https://github.com/OpenLiberty/devfile-stack/releases/download/open-liberty-maven-0.9.0/Dockerfile'
        uri: ./Dockerfile
        buildContext: ${PROJECTS_ROOT}  
  - name: myk8sdeploy
    kubernetes:
     uri: 'https://github.com/OpenLiberty/devfile-stack/releases/download/open-liberty-maven-0.9.0/app-deploy.yaml' 
commands:
  - id: run
    exec:
      component: dev
      commandLine:  echo "run command "; {{mvn-cmd}} -DinstallDirectory=/opt/ol/wlp -Ddebug=false -DhotTests=true -DcompileWait=3 io.openliberty.tools:liberty-maven-plugin:{{liberty-plugin-version}}:dev
      workingDir: /projects
      hotReloadCapable: true
      group:
        kind: run
        isDefault: true
  - id: run-test-off
    exec:
      component: dev
      commandLine: echo "run-test-off command "; {{mvn-cmd}} -DinstallDirectory=/opt/ol/wlp -Ddebug=false io.openliberty.tools:liberty-maven-plugin:{{liberty-plugin-version}}:dev
      workingDir: /projects
      hotReloadCapable: true
      group:
        kind: run
        isDefault: false
  - id: debug
    exec:
      component: dev
      commandLine: echo "debug command "; {{mvn-cmd}} -DinstallDirectory=/opt/ol/wlp -DdebugPort=${DEBUG_PORT} io.openliberty.tools:liberty-maven-plugin:{{liberty-plugin-version}}:dev -Dliberty.env.WLP_DEBUG_REMOTE=y
      workingDir: /projects
      hotReloadCapable: true
      group:
        kind: debug
        isDefault: true
  - id: test
    # The 'test' command requires an already active container. Multi-module apps require compilation prior to test processing.
    exec:
      component: dev
      commandLine: echo "test command "; {{mvn-cmd}} compiler:compile failsafe:integration-test failsafe:verify
      workingDir: /projects
      hotReloadCapable: true
      group:
        kind: test
        isDefault: true
#
# Build and Deploy cmds
#

  # Build an image using the stack provided dockerfile
  - id: build-image-stack-provided
    apply:
        component: outerloop-build-stack
  # Build an app image using a developer provided dockerfile
  - id: build-image-app-provided
    apply:
       component: outerloop-build-app
  # Apply an app image using the stack provided deployment manifest file
  - id: outerloop-deploy
    apply:
       component: myk8sdeploy
  # Deploy an app image built with the stack provided dockerfile - default action 
  - id: deploy
    composite:
        commands:
          - build-image-stack-provided
          - outerloop-deploy
        group:
          kind: deploy
          isDefault: true   
  # Deploy an app image built with a developer provided dockerfile - non-default action
  - id: deploy-app-image
    composite:
       commands:
         - build-image-app-provided
         - outerloop-deploy
       group:
         kind: deploy
